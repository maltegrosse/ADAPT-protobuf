syntax = "proto3";

package ADAPT.Products;

import "Common.proto";
import "Representations.proto";

option go_package = "github.com/maltegrosse/adapt-go/Products";

message ActiveIngredient{}

message AvailableProduct {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    int64 ProductId = 2;
    int64 GrowerId = 3;
    repeated ADAPT.Common.ContextItem  ContextItems = 4;
    repeated ADAPT.Common.TimeScope TimeScopes = 5;
 }
message Category{
    enum CategoryEnum
    {
        Additive = 0;
        Carrier =1;
        Fungicide = 2;
        GrowthRegulator = 3;
        Insecticide = 4;
        Herbicide = 5;
        Manure = 6;
        NitrogenStabilizer = 7;
        Unknown = 8;
        Variety = 9;
        Fertilizer = 10; //non-manure
        Pesticide = 11; //non-Insecticide
        Adjuvant= 12;
        Defoliant = 13;
    }
}


message ContainedPackagedProduct{
    int64 PackagedProductId = 1;
    int64 Count = 2;
}
message Container{
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string Description = 2;
    int64 ContainerModelId = 3;
    ContainerUseType ContainerUseType = 4;
    int64 CorrespondingDeviceElementId = 5;
    repeated ADAPT.Common.ContextItem  ContextItems = 6;
}


message ContainerModel { 
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string Description = 2;
    ContainerModelStatus Status = 3;
    ADAPT.Representations.NumericRepresentationValue Capacity = 4;
    ContainerUseType DefaultUseType = 5;
    ADAPT.Representations.NumericRepresentationValue Length = 6;
    ADAPT.Representations.NumericRepresentationValue Width = 7;
    ADAPT.Representations.NumericRepresentationValue Height = 8;
    repeated ADAPT.Common.ContextItem  ContextItems = 9;
}
message ContainerModelStatus{
    enum ContainerModelStatusEnum{
        Active = 0;
        Inactive = 1;
        Retired = 2;
        NoLongerSold = 3;
    }
}

message ContainerUseType{
    enum ContainerUseTypeEnum{
        Disposable= 0;
        Reusable = 1;
        Fixed = 2;
        Mobile = 3;
    }
}


message Crop {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string Name = 2;
    int64 ParentId = 3;
    ADAPT.Representations.NumericRepresentationValue ReferenceWeight = 4;
    ADAPT.Representations.NumericRepresentationValue StandardPayableMoisture = 5;
    repeated ADAPT.Common.ContextItem  ContextItems = 6;
 }
 message CropNutritionIngredient {
    ADAPT.Representations.EnumeratedValue IngredientCode = 1;
 }
 message CropNutritionProduct {
    bool IsManure = 1;
 }
 message CropProtectionProduct {
    bool Biological = 1;
    bool Organophosphate = 2;
    bool Carbamate = 3;
 }
 message CropVarietyProduct {
    int64 CropId = 1;
    repeated int64 TraitIds = 2 ;
    bool GeneticallyEnhanced = 3;
 }

 message DensityFactor {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    int64 ProductId = 2;
    string BatchNo = 3;
    string LotNo = 4;
    ADAPT.Representations.NumericRepresentationValue Density = 5;
    repeated int64 TimeScopeIds = 6 [packed = false];
 }

 message InertIngredient {}

 message Ingredient {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string Description = 2;
    repeated ADAPT.Common.ContextItem  ContextItems = 3;
    oneof subtype {
       ActiveIngredient ActiveIngredient = 101;
       CropNutritionIngredient CropNutritionIngredient = 102;
    }
 }

 message IngredientUse {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    int64 ProductId = 2;
    int64 IngredientId = 3;
    double Fraction = 4;
    bool IsProduct = 5;
 }

 message MixProduct {
    ADAPT.Representations.NumericRepresentationValue TotalQuantity = 1;
    bool IsTemporary = 2;
    bool IsHotMix = 3;
 }
 message  PackagedProduct{
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string Description = 2;
    int64 ProductId = 3;
    int64 ContainerModelId = 4;
    bool IsBulk = 5;
    PackagedProductStatus Status = 6;
    ADAPT.Representations.NumericRepresentationValue ProductQuantity = 7;
    repeated ContainedPackagedProduct ContainedPackagedProducts = 8;
    ADAPT.Representations.NumericRepresentationValue GrossWeight = 9;
    ADAPT.Representations.NumericRepresentationValue NetWeight = 10;
    repeated ADAPT.Common.ContextItem  ContextItems= 11;
}

message  PackagedProductInstance{
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string Description = 2;
    int64 PackagedProductId = 3;
    ADAPT.Representations.NumericRepresentationValue ProductQuantity = 4;
    repeated int64 ContainedPackagedProductInstanceIds = 5;
    ADAPT.Representations.NumericRepresentationValue Height = 6;
    ADAPT.Representations.NumericRepresentationValue GrossWeight = 7;
    ADAPT.Representations.NumericRepresentationValue NetWeight = 8;
    int64 ContainerId = 9;
    repeated ADAPT.Common.ContextItem  ContextItems = 10;
}
message ProductStatus{
    enum ProductStatusEnum {
        Active = 0;
        Inactive = 1;
        Retired = 2;
        NoLongerSold = 3;
     }
}

message PackagedProductStatus {
    enum PackagedProductStatusEnum{
        Active = 0;
        Inactive = 1;
        Retired = 2;
        NoLongerSold = 3;
    }
}


message Product {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    repeated ADAPT.Common.ContextItem  ContextItems = 2;
    repeated ProductComponent ProductComponents = 3;
    int64 BrandId = 15;
    Category Category = 16;
    ADAPT.Representations.NumericRepresentationValue Density = 17;
    string Description = 18;
    ProductFormEnum Form = 19;
    bool HasCropProtection = 20;
    bool HasCropNutrition = 21;
    bool HasCropVariety = 22;
    bool HasHarvestCommodity = 23;
    int64 ManufacturerId = 24;
    ProductType ProductType = 25;
    ProductStatus Status = 26;
    oneof subtype {
        GenericProduct GenericProduct = 101;
        HarvestedCommodityProduct HarvestedCommodityProduct = 102;
        CropProtectionProduct CropProtectionProduct = 103;
        CropVarietyProduct CropVarietyProduct = 104;
        CropNutritionProduct CropNutritionProduct = 105;
        MixProduct MixProduct = 106;
    }
    double SpecificGravity= 27;
}
message GenericProduct {
}
message HarvestedCommodityProduct {
    int64 CropId = 1;
 }
message ProductComponent {
    int64 IngredientId = 1;
    ADAPT.Representations.NumericRepresentationValue Quantity = 2;
    bool IsProduct = 3;
    bool IsCarrier = 4;
    }

    enum ProductFormEnum{
    Gas = 0;
    Liquid = 1;
    Solid = 2;
    Unknown = 3;
}
message ProductType{
    enum ProductTypeEnum{
        Chemical= 0;
        Fertilizer = 1;
        Generic = 2;
        Mix= 3;
        Variety= 4;
    }
}


message ProductUse {
    int64 ProductId = 1;
    ADAPT.Representations.NumericRepresentationValue Rate =2;
    ADAPT.Representations.NumericRepresentationValue AppliedArea =3;
    ADAPT.Representations.NumericRepresentationValue ProductTotal =4;
}

message Trait {
    ADAPT.Common.CompoundIdentifier  Id = 1;
    string TraitCode = 2;
    string Description = 3;
    int64 ManufacturerId = 4;
    repeated int64 CropIds = 5;
}